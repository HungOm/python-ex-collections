#!/usr/bin/env python3

import json
import locale
import sys
import reports
import os
import emails


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data

def keywithmaxval(d):
     """ a) create a list of the dict's keys and values; 
         b) return the key with the max value"""  
     v=list(d.values())
     k=list(d.keys())
     return k[v.index(max(v))]


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])
  
def popupr_car(year,price):
    return year * price

def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  
  max_revenue = {"revenue": 0}
  most_sales = {"total_sales":0}
  popular_year=dict()

  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # print(item["total_sales"])
    if item["total_sales"]>most_sales["total_sales"]:
        most_sales["total_sales"] = item["total_sales"]
        most_sales["car"] =item["car"] 
    car_year = item["car"]["car_year"]
    
    popular_year[car_year] = popular_year.get(car_year,0)+1;

  most_sold = most_sales["car"]
  most_p = keywithmaxval(popular_year)
  popular_total_sales = sum(list(map(lambda x: x['total_sales'] if x['car']['car_year']== most_p else 0, data )))

  carname = format_car(most_sold)
  sales = most_sales["total_sales"]
  summary = [
    "The {} generated the most revenue: ${}".format(
        format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(carname,sales),
    "The most popular year was {} with {} sales.".format(most_p,popular_total_sales)
    ]

  return summary

def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  table_data = cars_dict_to_table(data)
  reports.generate("/tmp/cars.pdf", "Sales summary for last month",('\n').join(summary), table_data)
  
  # print(a)
  
  sender = "automation@example.com"
  receiver = "{}@example.com".format(os.environ.get('USER'))
  subject = "Sales summary for last month"
  body = ('\n').join(summary)
  message = emails.generate(sender, receiver, subject, body, "/tmp/cars.pdf")
  emails.send(message)

if __name__ == "__main__":
  main(sys.argv)





